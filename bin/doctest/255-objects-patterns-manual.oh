#!/usr/bin/env oh

## Shared behavior can be implemented by defining a method in an outer scope
## and explicitly pulling that method "up".
##
## The following code,
##
#{
export me: method self () = {
    echo 'my name is:' (self name)
}

define x: object {
    export me $me
    export name: method () = {
        return 'x'
    }
}

x me
#}
##
## produces the output,
##
#+     my name is: x
##

## An object may redirect a call to another object. The code below,
##
#{
define z: object {
    export me $me
    export name: method () = {
        return 'z'
    }
    export you: method () = {
        x me    # Redirection.
    }
}

z me
z you
#}
##
## produces the output,
##
#+     my name is: z
#+     my name is: x
##

